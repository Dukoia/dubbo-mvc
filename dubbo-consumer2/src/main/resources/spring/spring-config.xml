<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:util="http://www.springframework.org/schema/util"
       xmlns:c="http://www.springframework.org/schema/c"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.0.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd"
       default-lazy-init="false">

    <bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:conf.properties</value>
            </list>
        </property>
    </bean>
    <context:component-scan base-package="com.alibaba.dubbo.consumer.controller"></context:component-scan>
    <!--    <context:component-scan base-package="com.alibaba.dubbo"/>-->
    <!--    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--        <property name="maxTotal" value="${redis.max.active}" />-->
    <!--        <property name="maxIdle" value="${redis.max.idle}" />-->
    <!--        <property name="maxWaitMillis" value="${redis.max.wait}" />-->
    <!--        <property name="testOnBorrow" value="${redis.test.on.borrow}" />-->
    <!--    </bean>-->

    <!-- redis的连接池pool，不是必选项：timeout/password -->
    <!--    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy">-->
    <!--        <constructor-arg index="0" ref="jedisPoolConfig" />-->
    <!--        <constructor-arg index="1" value="${redis.client}" />-->
    <!--        <constructor-arg index="2" value="${redis.port}" type="int" />-->
    <!--        <constructor-arg index="3" value="${redis.timeout}" type="int" />-->
    <!--        <constructor-arg index="4" value="${redis.auth}" />-->
    <!--    </bean>-->
</beans>